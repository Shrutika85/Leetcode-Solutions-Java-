import java.util.regex.Pattern; 
class Solution {
    public String reverseWords(String s) {
        String str=s;
        str.trim();
        //Pattern pattern = Pattern.compile("\\s"); //code
        
        // splitting String str with a pattern 
        // (i.e )splitting the string whenever their 
        // is whitespace and store in temp array. 
        //String[] temp = pattern.split(str);  //code 
        String[] temp = str.split(" "); 

        String result = ""; 
 
        // Iterate over the temp array and store 
        // the string in reverse order. 
        for (int i = 0; i < temp.length; i++) { 
            if (i == temp.length - 1) 
                result = temp[i] + result; 
            else
                result = " " + temp[i] + result; 
        } 
        return result; 
    }
}


// {
// 	int left = 0;
// 	int right = s.length() - 1;

// 	String temp = "";
// 	String ans = "";

// 	//Iterate the string and keep on adding to form a word
// 	//If empty space is encountered then add the current word to the result
// 	while (left <= right)
// 	{
// 		char ch = s.charAt(left);
// 		if (ch != ' ')
// 		{
// 			temp += ch;
// 		}
// 		else if (ch == ' ')
// 		{
// 			if (!ans.equals(""))
// 			{
// 				ans = temp + " " + ans;
// 			}
// 			else
// 			{
// 				ans = temp;
// 			}
// 			temp = "";
// 		}
// 		left++;
// 	}

// 	//If not empty string then add to the result(Last word is added)
// 	if (!temp.equals(""))
// 	{
// 		if (!ans.equals(""))
// 		{
// 			ans = temp + " " + ans;
// 		}
// 		else
// 		{
// 			ans = temp;
// 		}
// 	}

// 	return ans;
// }
